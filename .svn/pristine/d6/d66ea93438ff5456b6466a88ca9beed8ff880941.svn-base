<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dhcc.jn.tenant.dao.VDataProductDao">

	<parameterMap id="parameterMap" type="com.dhcc.jn.tenant.entity.VDataProduct"></parameterMap>
	<resultMap id="resultMap" type="com.dhcc.jn.tenant.entity.VDataProduct">
		<result property="id" column="id"/>
		<result property="productType" column="product_type"/>
		<result property="catalogId" column="catalog_id"/>
		<result property="name" column="name"/>
		<result property="code" column="code"/>
		<result property="description" column="description"/>
		<result property="items" column="items"/>
		<result property="version" column="version"/>
		<result property="level" column="level"/>
		<result property="status" column="status"/>
		<result property="createBy" column="create_by"/>
		<result property="createTime" column="create_time"/>
		<result property="updateBy" column="update_by"/>
		<result property="updateTime" column="update_time"/>
	</resultMap>
	
	<sql id="columnSql">
		<trim suffixOverrides=",">
			t.id,
			t.product_type,
			t.catalog_id,
			t.name,
			t.code,
			t.description,
			t.items,
			t.version,
			t.level,
			t.status,
			t.create_by,
			t.create_time,
			t.update_by,
			t.update_time,
	 	</trim>
	</sql>
	
	<select id="find" parameterMap="parameterMap" resultMap="resultMap">
		select
			<include refid="columnSql"></include>
		from v_data_product t
		<where>
			<if test="productType != null and productType != ''">
				and t.product_type = #{productType}			
			</if>
			<if test="catalogId != null and catalogId != ''">
				and t.catalog_id = #{catalogId}			
			</if>
			<if test="name != null and name != ''">
				and t.name = #{name}			
			</if>
			<if test="code != null and code != ''">
				and t.code = #{code}			
			</if>
			<if test="level != null and level != ''">
				and t.level = #{level}			
			</if>
			<if test="status != null and status != ''">
				and t.status = #{status}			
			</if>
		</where>
	</select>
	
	<select id="getById" parameterType="java.lang.String" resultMap="resultMap">
		select
			<include refid="columnSql"></include>
		from v_data_product t
		where t.id = #{value}
	</select>
	
	<insert id="add" parameterMap="parameterMap">
		insert into v_data_product
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id,
			product_type,
			catalog_id,
			name,
			code,
			description,
			items,
			version,
			level,
			status,
			create_by,
			create_time,
			update_by,
			update_time,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{id},
			#{productType},
			#{catalogId},
			#{name},
			#{code},
			#{description},
			#{items},
			#{version},
			#{level},
			#{status},
			#{createBy},
			#{createTime},
			#{updateBy},
			#{updateTime},
		</trim>
	</insert>
	
	<insert id="batchAdd" parameterType="java.util.List">
		insert into v_data_product
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id,
			product_type,
			catalog_id,
			name,
			code,
			description,
			items,
			version,
			level,
			status,
			create_by,
			create_time,
			update_by,
			update_time,
		</trim>
		values
		<foreach collection="list" item="item" separator=",">
			<trim prefix="(" suffix=")" suffixOverrides=",">
				#{item.id},
				#{item.productType},
				#{item.catalogId},
				#{item.name},
				#{item.code},
				#{item.description},
				#{item.items},
				#{item.version},
				#{item.level},
				#{item.status},
				#{item.createBy},
				#{item.createTime},
				#{item.updateBy},
				#{item.updateTime},
			</trim>
		</foreach>
	</insert>
	
	<update id="update" parameterMap="parameterMap">
		update v_data_product
		<set>
			product_type = #{productType},
			catalog_id = #{catalogId},
			name = #{name},
			code = #{code},
			description = #{description},
			items = #{items},
			version = #{version},
			level = #{level},
			status = #{status},
			create_by = #{createBy},
			create_time = #{createTime},
			update_by = #{updateBy},
			update_time = #{updateTime},
		</set>
		where id = #{id}
	</update>
	
	<update id="updateNotNull" parameterMap="parameterMap">
		update v_data_product
		<set>
			<if test="productType != null">
			product_type = #{productType},
			</if>
			<if test="catalogId != null">
			catalog_id = #{catalogId},
			</if>
			<if test="name != null">
			name = #{name},
			</if>
			<if test="code != null">
			code = #{code},
			</if>
			<if test="description != null">
			description = #{description},
			</if>
			<if test="items != null">
			items = #{items},
			</if>
			<if test="version != null">
			version = #{version},
			</if>
			<if test="level != null">
			level = #{level},
			</if>
			<if test="status != null">
			status = #{status},
			</if>
			<if test="createBy != null">
			create_by = #{createBy},
			</if>
			<if test="createTime != null">
			create_time = #{createTime},
			</if>
			<if test="updateBy != null">
			update_by = #{updateBy},
			</if>
			<if test="updateTime != null">
			update_time = #{updateTime},
			</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="java.lang.String">
		delete from v_data_product where id = #{value}
	</delete>
	
	<delete id="batchDelete" parameterType="java.util.List">
		delete from v_data_product where id in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>
	
	<!--获取所有的数据产品资源(标注该用户类型是否选中)-->
	<select id="getDataProductResources" resultType="map">
		select p.*,t.data_id,t.parent_id,case when aa.data_id is null then false else true end checked
		from v_data_product p left join
		(select t.data_id from tb_tenant_type_data t
		where t.zh_type_id = #{zhTypeId} and t.data_from = '1' and t.parent_id =#{parentId}) aa on p.id = aa.data_id
		where p.catalog_id = #{catalogId}
	</select>
	
</mapper>