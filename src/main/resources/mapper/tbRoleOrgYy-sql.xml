<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dhcc.jn.tenant.dao.TbRoleOrgYyDao">

	<parameterMap id="parameterMap" type="com.dhcc.jn.tenant.entity.TbRoleOrgYy"></parameterMap>
	<resultMap id="resultMap" type="com.dhcc.jn.tenant.entity.TbRoleOrgYy">
		<result property="id" column="id"/>
		<result property="roleId" column="role_id"/>
		<result property="roleType" column="role_type"/>
		<result property="qyCode" column="qy_code"/>
		<result property="orgCode" column="org_code"/>
		<result property="bfCode" column="bf_code"/>
	</resultMap>
	
	<sql id="columnSql">
		<trim suffixOverrides=",">
			t.id,
			t.role_id,
			t.role_type,
			t.qy_code,
			t.org_code,
			t.bf_code,
	 	</trim>
	</sql>
	
	<select id="find" parameterMap="parameterMap" resultMap="resultMap">
		select
			<include refid="columnSql"></include>
		from tb_role_org_yy t
		<where>
			<if test="roleId != null and roleId != ''">
				and t.role_id = #{roleId}			
			</if>
			<if test="roleType != null and roleType != ''">
				and t.role_type = #{roleType}			
			</if>
			<if test="qyCode != null and qyCode != ''">
				and t.qy_code = #{qyCode}			
			</if>
			<if test="orgCode != null and orgCode != ''">
				and t.org_code = #{orgCode}			
			</if>
			<if test="bfCode != null and bfCode != ''">
				and t.bf_code = #{bfCode}			
			</if>
		</where>
	</select>
	
	<select id="getById" parameterType="java.lang.String" resultMap="resultMap">
		select
			<include refid="columnSql"></include>
		from tb_role_org_yy t
		where t.id = #{value}
	</select>
	
	<insert id="add" parameterMap="parameterMap">
		insert into tb_role_org_yy
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id,
			role_id,
			role_type,
			qy_code,
			org_code,
			bf_code,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{id},
			#{roleId},
			#{roleType},
			#{qyCode},
			#{orgCode},
			#{bfCode},
		</trim>
	</insert>
	
	<insert id="batchAdd" parameterType="java.util.List">
		insert into tb_role_org_yy
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id,
			role_id,
			role_type,
			qy_code,
			org_code,
			bf_code,
		</trim>
		values
		<foreach collection="list" item="item" separator=",">
			<trim prefix="(" suffix=")" suffixOverrides=",">
				#{item.id},
				#{item.roleId},
				#{item.roleType},
				#{item.qyCode},
				#{item.orgCode},
				#{item.bfCode},
			</trim>
		</foreach>
	</insert>
	
	<update id="update" parameterMap="parameterMap">
		update tb_role_org_yy
		<set>
			role_id = #{roleId},
			role_type = #{roleType},
			qy_code = #{qyCode},
			org_code = #{orgCode},
			bf_code = #{bfCode},
		</set>
		where id = #{id}
	</update>
	
	<update id="updateNotNull" parameterMap="parameterMap">
		update tb_role_org_yy
		<set>
			<if test="roleId != null">
			role_id = #{roleId},
			</if>
			<if test="roleType != null">
			role_type = #{roleType},
			</if>
			<if test="qyCode != null">
			qy_code = #{qyCode},
			</if>
			<if test="orgCode != null">
			org_code = #{orgCode},
			</if>
			<if test="bfCode != null">
			bf_code = #{bfCode},
			</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="java.lang.String">
		delete from tb_role_org_yy where id = #{value}
	</delete>
	
	<delete id="batchDelete" parameterType="java.util.List">
		delete from tb_role_org_yy where id in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>
	<select id="findByRoleId"  resultMap="resultMap">
		SELECT
			t.qy_code
		FROM
			`tb_role_org_yy` t
		WHERE
			t.role_id = #{roleId}
	</select>
	<select id="findRoleIdAndqyCode"  resultMap="resultMap">
		SELECT
			t.bf_code
		FROM
			`tb_role_org_yy` t
		WHERE
			t.qy_code = #{orgCode} AND
			t.role_id = #{roleId} 

	</select>
	<select id="findDepartequipmeninfoAndroleorgyy"  resultType="map">
		SELECT
		  t.bf_code as bfCode,
		  t.bf_name as bfName,
		 case when h.bf_code is not null then 'true' else 'false'  end as checked   
		FROM jn_uds.tb_depart_equipmen_info t
		left join (
		  SELECT bf_code,qy_code 
		  FROM  `tb_role_org_yy` 
		  WHERE  qy_code = #{orgCode} AND  role_id = #{roleId}
		) h on h.qy_code = t.org_code  and h.bf_code = t.bf_code 
		 WHERE t.org_code = #{orgCode}
		 AND t.equipment_type = '0'
		 GROUP BY  t.bf_code

	</select>
	
	<select id="getRoleId" resultMap="resultMap">
		SELECT 
			<include refid="columnSql"/>
		from tb_role_org_yy t
		WHERE t.role_id = #{roleId}		
	</select>
</mapper>